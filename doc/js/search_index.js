var search_data = {"index":{"searchIndex":["companies","company","object","topup","companytopupresult","topupservice","usertopupresult","user","users","all_companies_by_id()","new()","new()","new()","new()","new()","new()","new()","print_instructions()","top_up_all_companies()","users_by_company_id()","validate!()","validate!()","with_file_out()","readme","challenge","companies.json","example_output","output","users.json"],"longSearchIndex":["companies","company","object","topup","topup::companytopupresult","topup::topupservice","topup::usertopupresult","user","users","companies#all_companies_by_id()","companies::new()","company::new()","topup::companytopupresult::new()","topup::topupservice::new()","topup::usertopupresult::new()","user::new()","users::new()","object#print_instructions()","topup::topupservice#top_up_all_companies()","users#users_by_company_id()","company#validate!()","user#validate!()","object#with_file_out()","","","","","",""],"info":[["Companies","","Companies.html","","<p>A collection of <code>Company</code> objects, with methods for retrieving the list of companies in ordered by one …\n"],["Company","","Company.html","","<p>Structure to store information about a company\n"],["Object","","Object.html","",""],["TopUp","","TopUp.html","","<p>Namespace for the service and associated classes.\n"],["TopUp::CompanyTopUpResult","","TopUp/CompanyTopUpResult.html","","<p>A storage structure for information pertaining to updating the token balances of all users of a company. …\n"],["TopUp::TopUpService","","TopUp/TopUpService.html","","<p>A service to update user token balances with their companies’ preset top up ammounts.\n"],["TopUp::UserTopUpResult","","TopUp/UserTopUpResult.html","","<p>A storage structure for information to report about updating a user’s token balance\n"],["User","","User.html","","<p>Structure to store information about a user.\n"],["Users","","Users.html","","<p>A collection of <code>User</code> objects, with methods for retrieving all users based on a certain search field. …\n"],["all_companies_by_id","Companies","Companies.html#method-i-all_companies_by_id","()","<p>Returns the full list of companies, sorted alphabetically by ID.\n"],["new","Companies","Companies.html#method-c-new","(companies_hash)","\n<pre>Initializes the collection, turning hashed JSON into proper &lt;tt&gt;Company&lt;/tt&gt; objects.</pre>\n<p>Params:\n\n<pre>* &lt;tt&gt;companies_hash&lt;/tt&gt; ...</pre>\n"],["new","Company","Company.html#method-c-new","(id:, name: nil, top_up:, email_status: false)","<p>Initializes the Company object with a required set of fields.\n"],["new","TopUp::CompanyTopUpResult","TopUp/CompanyTopUpResult.html#method-c-new","()","<p>Initializes the structure with empty lists and a balance changes total of 0.\n"],["new","TopUp::TopUpService","TopUp/TopUpService.html#method-c-new","(companies:, users:, output:)","<p>Initializes the service with data collections and an output stream\n<p>Params:\n\n<pre>* &lt;tt&gt;companies&lt;/tt&gt; - A &lt;tt&gt;Companies&lt;/tt&gt; ...</pre>\n"],["new","TopUp::UserTopUpResult","TopUp/UserTopUpResult.html#method-c-new","(user)","<p>Initializes the structure with the <code>User</code> being updated.\n"],["new","User","User.html#method-c-new","(id:, first_name:\"\", last_name:\"\", email: nil, company_id:, email_status: false, active_status: false, tokens: 0)","<p>Initializes the User with a set of fields.\n"],["new","Users","Users.html#method-c-new","(users_hash)","\n<pre>Initializes the collection, turning hashed JSON into proper &lt;tt&gt;User&lt;/tt&gt; objects.</pre>\n<p>Params:\n\n<pre>* &lt;tt&gt;companies_hash&lt;/tt&gt; ...</pre>\n"],["print_instructions","Object","Object.html#method-i-print_instructions","()","<p>Prints the instructions for running the program\n"],["top_up_all_companies","TopUp::TopUpService","TopUp/TopUpService.html#method-i-top_up_all_companies","()","<p>Performs a top up of all users for each company in the companies collection.\n"],["users_by_company_id","Users","Users.html#method-i-users_by_company_id","(company_id)","<p>Returns an array of <code>User</code> associated with the provided company ID.  The array will be sorted by Last  …\n"],["validate!","Company","Company.html#method-i-validate-21","()","<p>Validates the inputs to the Company initializer\n"],["validate!","User","User.html#method-i-validate-21","()","<p>Validates the inputs to the User initializer.\n"],["with_file_out","Object","Object.html#method-i-with_file_out","(file_name)","<p>Opens a file for writing, and ensures it is closed once the passed block is executed, and even if the …\n"],["README","","README_md.html","","<p>Takehome v5\n<p>To run the program:\n<code>gem install json</code>\n<p><code>ruby challenge.rb companies.json users.json</code>\n"],["challenge","","challenge_txt.html","","<p>Code challenge\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">You</span> <span class=\"ruby-identifier\">have</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">json</span> <span class=\"ruby-identifier\">file</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-identifier\">users</span>.\n<span class=\"ruby-constant\">You</span> <span class=\"ruby-identifier\">have</span> <span class=\"ruby-identifier\">a</span> <span class=\"ruby-identifier\">json</span> <span class=\"ruby-identifier\">file</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-identifier\">companies</span>.\n\n<span class=\"ruby-constant\">Please</span> <span class=\"ruby-identifier\">look</span> <span class=\"ruby-identifier\">at</span> <span class=\"ruby-identifier\">these</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["companies.json","","companies_json.html","","<p>[\n\n<pre>{\n        &quot;id&quot;: 1,\n        &quot;name&quot;: &quot;Blue Cat Inc.&quot;,\n        &quot;top_up&quot;: 71,\n        &quot;email_status&quot;: false ...</pre>\n"],["example_output","","example_output_txt.html","","<p>Company Id: 1 Company Name: Blue Cat Inc. Users Emailed: Users Not Emailed:\n\n<pre>Carr, Genesis, genesis.carr@demo.com ...</pre>\n"],["output","","output_txt.html","","<p>Company Id: 1 Company Name: Blue Cat Inc. Users Emailed: Users Not Emailed:\n\n<pre>Carr, Genesis, genesis.carr@demo.com ...</pre>\n"],["users.json","","users_json.html","","<p>[\n\n<pre>{\n        &quot;id&quot;: 1,\n        &quot;first_name&quot;: &quot;Tanya&quot;,\n        &quot;last_name&quot;: &quot;Nichols&quot;,\n        &quot;email&quot;: &quot;tanya.nichols@test.com&quot;, ...</pre>\n"]]}}